// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/LeftLogicBitshift.hdl

/**
 * Shift x left y bits, new bits are filled in with 0, you may not use any DFF or clocked chip in this implementation
 * You may assume the maximum shift is 8-bit
 */

CHIP LeftLogicBitshift {
    IN x[16], y[16];
    OUT out[16];

    PARTS:
    // Put you code here:
		Mux16(a=x, b[0]=false, b[1..15]=x[0..14], sel=y[0], out[0..1]=shift1a, out[2..15]=shift1b);
		Mux16(a[0..1]=shift1a, a[2..15]=shift1b, b[0..1]=false, b[2..15]=shift1b, sel=y[1], out[0..3]=shift2a, out[4..15]=shift2b);
		Mux16(a[0..3]=shift2a, a[4..15]=shift2b, b[0..3]=false, b[4..15]=shift2b, sel=y[2], out[0..7]=shift3a, out[8..15]=shift3b);
		Mux16(a[0..7]=shift3a, a[8..15]=shift3b, b[0..7]=false, b[8..15]=shift3b, sel=y[3], out=out);
}